version: '3.8'

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    container_name: ftp-manager-db
    environment:
      POSTGRES_DB: ftpmanager
      POSTGRES_USER: ftpuser
      POSTGRES_PASSWORD: ftppassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis 缓存和消息队列
  redis:
    image: redis:7-alpine
    container_name: ftp-manager-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Flask API 后端
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ftp-manager-api
    environment:
      - DATABASE_URL=postgresql://ftpuser:ftppassword@db:5432/ftpmanager
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - FLASK_ENV=production
      - UPLOAD_FOLDER=/app/uploads
      - LOG_LEVEL=INFO
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery 工作进程
  worker:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ftp-manager-worker
    command: celery -A app.celery worker --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=postgresql://ftpuser:ftppassword@db:5432/ftpmanager
      - REDIS_URL=redis://redis:6379/0
      - UPLOAD_FOLDER=/app/uploads
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # Celery Beat 定时任务
  beat:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ftp-manager-beat
    command: celery -A app.celery beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://ftpuser:ftppassword@db:5432/ftpmanager
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # React 前端
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ftp-manager-frontend
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: ftp-manager-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: ftp-manager-network
